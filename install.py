"""
Install wnframework and port
"""

import sys, os

# settings

from install_settings import *

def make_defs():
	os.system('cp %s %s' % (os.path.join('wnframework','cgi-bin','webnotes','defs_template.py'), os.path.join('wnframework','cgi-bin','webnotes','defs.py')))

	global db_password, db_name

	# ask for the user password
	new_db_name = raw_input('Name of the new database (default: %s):' % db_name)
	if new_db_name:
		db_name = new_db_name
	
	if not db_password:
		db_password = raw_input('Password of the new database:')

	defs_content = open(os.path.join('wnframework','cgi-bin','webnotes','defs_template.py'), 'r').readlines()
	defs = open(os.path.join('wnframework','cgi-bin','webnotes','defs.py'), 'w')
	
	# replace the line that begin with db_password and modules_path with
	for d in defs_content:
		if d.startswith('db_password'):
			defs.write('db_password="%s"' % db_password.replace('"', '\"'))
		elif d.startswith('default_db_name'):
			defs.write('default_db_name="%s"' % db_name.replace('"', '\"'))
		elif d.startswith('modules_path'):
			defs.write('modules_path="%s"' % os.path.join(os.path.abspath('erpnext')))
		else:
			defs.write(d)

	defs.close()

def restore_db():
	"""
		import the database
	"""
	sys.path.append(os.path.join('wnframework','cgi-bin'))

	import webnotes
	from webnotes.db import Database
	from webnotes.install_lib.install import Installer

	global db_name

	root_password = raw_input('Root password for mysql (for db and user creation):')

	inst = Installer('root', root_password)

	# unzip
	os.system("gunzip %s" % os.path.join('erpnext', 'master.sql.gz'))

	# import
	print "Importing database..."
	inst.import_from_db(db_name, os.path.join('erpnext', 'master.sql'))

	# cleanup
	webnotes.conn = Database('localhost','root',root_password)
	webnotes.conn.use(db_name)
	webnotes.conn.set_value('Control Panel',None,'company_name',raw_input('[ERPNext setup] Enter the name of the full name of your company:'))
	webnotes.conn.set_value('Control Panel',None,'sync_with_gateway', None)
	os.remove(os.path.join('erpnext','master.sql'))

	# copy icons
	if not os.path.exists(os.path.join('wnframework','images','user')):
		os.mkdir(os.path.join('wnframework','images','user'))
	os.system("cp %s %s" % os.path.join('erpnext','module_icons.png'),os.path.join('wnframework','images','user'))

def setup_httpd():
	conf = """
# generated by erpnext install.py
<VirtualHost *:%(port)s>
	# web root folder
	DocumentRoot %(document_root)s

	# allow cgi execution in the app
	Options +ExecCGI
	AddHandler cgi-script .cgi
	
	# default index is .cgi
	DirectoryIndex index.cgi

	# dont show .py files
	<Directory "/">
		<IfModule mod_rewrite.c>
			RewriteEngine On
			RewriteRule .py [F]
		</IfModule>

		Order allow,deny
		Allow from all
	</Directory>
</VirtualHost>
	"""

	if os.path.exists(os.path.join('/', 'etc', 'httpd', 'conf.d')):
		conf_file = open(os.path.join('/', 'etc', 'httpd', 'conf.d', 'erpnext.conf'),'w')

	elif os.path.exists(os.path.join('/', 'etc', 'apache2', 'conf.d')):
		conf_file = open(os.path.join('/', 'etc', 'apache2', 'conf.d', 'erpnext.conf'),'w')

	else:
		print "[Error] Could not find apache config files in the usual places, please manually add the erpnext.conf file in your apache conf folder"
		conf_file = open('erpnext.conf', 'w')

	conf_file.write(conf % {'port': http_port, 'document_root': os.path.abspath('wnframework')})
	conf_file.close()


def install():
	make_defs()
	restore_db()
	setup_httpd()

	print "Install complete. Please restart your http server and go to http://localhost:%s on your browser to start erpnext" % http_port


if __name__=='__main__':
	install()



